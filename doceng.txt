docEng.txt 0.0.5                    UTF-8                      dh:2022-05-**
----|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*

             nfoWare/nfoWorks docEng Document Engineering Project
             ====================================================

                      <https://github.com/orcmid/docEng>
           <https://github.com/orcmid/docEng/blob/main/docEng.txt>

           PATTERNS, PRACTICES, AND TOOLS FOR DOCUMENT ENGINEERING

                     SOURCE CODE VERSION CONTROL REPOSITORY
                     --------------------------------------

    docEng is a collection of practices, utilities and software components.
    The patterns are all around Document Engineering involving GitHub in
    some capacity.

    There is attention on how to structure for documentation of software
    projects.  There is attention on how to structure web-site organization
    for development and for documentation.  And there is attention to the
    processing of document representations in various forms.

    The determination and calibration of document-processing interop is a
    separate project, currently in hibernation: orcmid/DocInterop on GitHub.

    Document Engineering patterns are developed with implementations found
    in other GitHub projects.  The Document Engineerng application to docEng
    itself is a flavor of self-referential pattern.

MANIFEST

    docEng.txt
        this manifest and job-jar file

    docs/
        source of GitHub Pages documentation for docEng and accessible at
        <https://orcmid.github.io/docEng/>

    LICENSE.txt
         The open-source software license that applies to the entire
         GitHub orcmid/docEng project except where stated otherwise.

    NOTICE.txt
         Notice that applies with respect to particular components in
         the docEng repository and any dependencies they might have.

    .gitattributes
         A declaration of file attributes for use in Git repositories of
         the nfoTools source code.

    .gitignore
         A declaration of artifacts to be ignored and excluded from Git
         repositories, applying to working files that are not part of the
         managed archive materials

    README.md
         The customary README for GitHub projects

----|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*

                    Copyright 2021-2022 Dennis E. Hamilton

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

----|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*

ATTRIBUTION

   Hamilton, Dennis E. Patterns, Practices, and Tools for Document
   Engineering, manifest and job jar.  Text file docEng.txt version 0.0.5
   dated 2022-10-13 available on the Internet as a version of
   <https://github.com/orcmid/docEng/blob/main/docEng.txt>


TODO

  * Edit GitHub Readme.md to describe this project.

  * Explain what Document Engineering is.

  * Complete any customization of the front-porch of the project's repository:
    License
    Notice
    .gitignore
    .gitattributes

  * Start using orcmid/docEng Issues, Discussion, and Projects for operation
    in the open

  * Get into the GitHub templates for documentation and deal with it in the
    Construction Materials of the docEng site.  See
    <https://github.com/orcmid/nfoTools/issues/8>.

  * I need docEng of the docEng/docs about docEng.  This seemingly recursive
    case needs to bottom out on some ground case.

  * With regard to web-published documentation, this seems to be the place
    for wingnut.  Or do I really need a wingnut project?  It certainly has
    its own blog(s), etc., but that does not prevent it from being under
    docEng.

  * On the other hand, it might make more sense to have nfoCentrale
    as a GitHub project, just like that web has been under VSS.  Must think
    this through.  Wingnut is about blogs and not web sites, but it is a
    portion of a larger project.  But there are individual webs under IIS
    in the nfoCentral publishing model, even though they map to subfolders
    on A2 Hosting's nfoCentrale.com site.  So they are managed individually
    and updates published individually.

  * The nfoCentrale publishing model does rely on the site-server model to
    distinguish between authoring (in FrontPage) and publishing (via FTP from
    shared VSS of final-form HTML and assets).

  * Do I really want to rescue nfoCentrale.com?  I should subdivide it then,
    and I should probably keep the projects private.

  * Can a project be published (under orcmid.github.io) even when the
    authoring repository is private?  I need to look into that.

  * Can I rescue an nfoCentrale.com web site into a Hugo site?  What will
    have to change?  COOL.  GitHub publishes .md files to .html, not .htm,
    so I can have my construction structures and other files side-by-side.

  * With regard to granularity, it is clear I should not have repositories
    larger than the domains that map to nfoCentrale.com.  I will not keep
    the separate domains (or at least not most of them), but I can make them
    separate GitHub projects and isolate the authoring.  Whether I publish
    to individual docs or into a larger one is a separate consideration.
    I am conflicted about that.  I don't want to think of GitHub having to
    republish large chunks or even an entire mega-doc folder.

  * I need to think through the nfoCentral federation of sites to a rescue
    and preservation on GitHub.

  * I also need to find a way to make headway on important nfoTools, Miser,
    and docEng efforts without getting badly detoured.

  * A goal for breaking the logjam, without floating all the logs at once,
    is employment of Hugo for orcmid.github.io/docEng itself and going on
    from there.  Hugo will come under tools/ and maybe dev/ here.  There also
    may need to be a wingnut preservation as demonstration of the rescue and
    also introduction of Hugo for it.

  * I assume that a repository that is specifically for a web site could have
    GitHub Pages be at the root.  It makes the README be a little weird,
    except it can serve as the front porch. I should try that.  I need to be
    careful about its maintenance as a Hugo site then.  Yes, that's weird.
    Obviously needs to be tried with wingnut and I need to get my head around
    this case.  I'm just attempting to save a level of nesting for a project
    that is entirely about a web site.

  * In this case, the clone is a Hugo publishing folder, not the Hugo
    authoring folder.  That breaches wanting to have the authoring be under
    Git.  I must adjust the model for that.  It looks like the Hugo site
    should be a project and its public should be the GitHub pages.  There is
    a small matter of customization of other aspects and how that syncs with
    Hugo updates.  These are customizations of dependencies.  I need to figure
    out how that can work.

  * This is complicated.  I have to figure out what not to clone yet I can
    customize and preserve in GitHub.  I don't think I should be using
    .gitmodule in this.  I then need to deal with dependency/customization
    management.  My head hurts and I will stop for now.

  * I need some simple rescue efforts in Hugo.

  * See docs.txt for more on skills and tools, including translation as well
    as exfiltration of web sites/content.

  * Here's a related/relevant skill item,
    <https://twitter.com/vardi/status/1523069742076022785>.

 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

 0.0.5 2022-10-13T16:12Z Review of TODOs, pondering of approach here.
 0.0.4 2022-04-29T17:31Z Pondering web-site authoring collaboration models
       and how to handle/incorporate rescuing sites to Hugo.
 0.0.3 2021-10-29T22:31Z Smooth, replace "master" with "main"
 0.0.2 2021-10-17T21:30Z Identify needd to change "master" to "main" here.
 0.0.1 2021-09-05T17:12Z Replace nfoTools boilerplate with docEng material.
 0.0.0 2021-02-15T00:35Z Initial placeholder of the top level manifest and
       job jar.

                        ***** end of docEng.txt *****
